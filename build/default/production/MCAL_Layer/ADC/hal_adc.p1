Version 4.0 HI-TECH Software Intermediate Code
"1381 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1825
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2047
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"993
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1105
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1217
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1329
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"190
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"361
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"536
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"678
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"30 MCAL_Layer/ADC/hal_adc.c
[; ;MCAL_Layer/ADC/hal_adc.c: 30: Std_RetrunType ADC_Init(const adc_t *adc_obj){
[c E3070 0 1 2 3 4 5 6 .. ]
[n E3070 . ADC_CONVERSION_CLOCK_FOSC_DIV_2 ADC_CONVERSION_CLOCK_FOSC_DIV_8 ADC_CONVERSION_CLOCK_FOSC_DIV_32 ADC_CONVERSION_CLOCK_FOSC_FRC ADC_CONVERSION_CLOCK_FOSC_DIV_4 ADC_CONVERSION_CLOCK_FOSC_DIV_16 ADC_CONVERSION_CLOCK_FOSC_DIV_64  ]
[c E3060 0 1 2 3 4 5 6 7 .. ]
[n E3060 . ADC_0_TAD ADC_2_TAD ADC_4_TAD ADC_6_TAD ADC_8_TAD ADC_12_TAD ADC_16_TAD ADC_20_TAD  ]
[c E3045 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E3045 . ADC_CHANNEL_AN0 ADC_CHANNEL_AN1 ADC_CHANNEL_AN2 ADC_CHANNEL_AN3 ADC_CHANNEL_AN4 ADC_CHANNEL_AN5 ADC_CHANNEL_AN6 ADC_CHANNEL_AN7 ADC_CHANNEL_AN8 ADC_CHANNEL_AN9 ADC_CHANNEL_AN10 ADC_CHANNEL_AN11 ADC_CHANNEL_AN12  ]
"138 MCAL_Layer/ADC/hal_adc.h
[; ;MCAL_Layer/ADC/hal_adc.h: 138: typedef struct{
[s S274 `E3070 1 `E3060 1 `E3045 1 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S274 . conv_clk acqui_time chnl result_format voltage_cfg adc_reserved ]
"4536 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[s S179 :1 `uc 1 :1 `uc 1 ]
[n S179 . . GO_NOT_DONE ]
"4540
[s S180 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S180 . ADON GO_nDONE CHS ]
"4545
[s S181 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S181 . . GO CHS0 CHS1 CHS2 CHS3 ]
"4553
[s S182 :1 `uc 1 :1 `uc 1 ]
[n S182 . . DONE ]
"4557
[s S183 :1 `uc 1 :1 `uc 1 ]
[n S183 . . NOT_DONE ]
"4561
[s S184 :1 `uc 1 :1 `uc 1 ]
[n S184 . . nDONE ]
"4565
[s S185 :1 `uc 1 :1 `uc 1 ]
[n S185 . . GO_DONE ]
"4569
[s S186 :1 `uc 1 :1 `uc 1 ]
[n S186 . . GODONE ]
"4535
[u S178 `S179 1 `S180 1 `S181 1 `S182 1 `S183 1 `S184 1 `S185 1 `S186 1 ]
[n S178 . . . . . . . . . ]
"4574
[v _ADCON0bits `VS178 ~T0 @X0 0 e@4034 ]
"4380
[s S172 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S172 . ADCS ACQT . ADFM ]
"4386
[s S173 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S173 . ADCS0 ADCS1 ADCS2 ACQT0 ACQT1 ACQT2 ]
"4379
[u S171 `S172 1 `S173 1 ]
[n S171 . . . ]
"4395
[v _ADCON2bits `VS171 ~T0 @X0 0 e@4032 ]
[v F3116 `(v ~T0 @X0 1 tf1`E3045 ]
"19 MCAL_Layer/ADC/hal_adc.c
[; ;MCAL_Layer/ADC/hal_adc.c: 19: static __attribute__((inline)) void configure_adc_channel_port(adc_channel_t adc_ch);
[v _configure_adc_channel_port `TF3116 ~T0 @X0 0 s ]
[v F3110 `(v ~T0 @X0 1 tf1`*CS274 ]
"17
[; ;MCAL_Layer/ADC/hal_adc.c: 17: static __attribute__((inline)) void configure_adc_volatage_ref(const adc_t *adc_obj);
[v _configure_adc_volatage_ref `TF3110 ~T0 @X0 0 s ]
[v F3113 `(v ~T0 @X0 1 tf1`*CS274 ]
"18
[; ;MCAL_Layer/ADC/hal_adc.c: 18: static __attribute__((inline)) void configure_adc_result_format(const adc_t *adc_obj);
[v _configure_adc_result_format `TF3113 ~T0 @X0 0 s ]
"4663 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[v _ADRESH `Vuc ~T0 @X0 0 e@4036 ]
"4656
[v _ADRESL `Vuc ~T0 @X0 0 e@4035 ]
"4451
[s S175 :4 `uc 1 :2 `uc 1 ]
[n S175 . PCFG VCFG ]
"4455
[s S176 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S176 . PCFG0 PCFG1 PCFG2 PCFG3 VCFG0 VCFG1 ]
"4463
[s S177 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S177 . . CHSN3 VCFG01 VCFG11 ]
"4450
[u S174 `S175 1 `S176 1 `S177 1 ]
[n S174 . . . . ]
"4470
[v _ADCON1bits `VS174 ~T0 @X0 0 e@4033 ]
"55 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\../proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"84 MCAL_Layer/ADC/../Interrupt/../GPIO/hal_gpio.h
[v _tris_reg `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_reg
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"85
[v _lat_reg `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_reg
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"86
[v _port_reg `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_reg
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"30 MCAL_Layer/ADC/hal_adc.c
[; ;MCAL_Layer/ADC/hal_adc.c: 30: Std_RetrunType ADC_Init(const adc_t *adc_obj){
[v _ADC_Init `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_Init ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"31
[; ;MCAL_Layer/ADC/hal_adc.c: 31:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"32
[; ;MCAL_Layer/ADC/hal_adc.c: 32:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 276  ]
"33
[; ;MCAL_Layer/ADC/hal_adc.c: 33:     {
{
"34
[; ;MCAL_Layer/ADC/hal_adc.c: 34:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"35
[; ;MCAL_Layer/ADC/hal_adc.c: 35:     }
}
[e $U 277  ]
"36
[; ;MCAL_Layer/ADC/hal_adc.c: 36:     else
[e :U 276 ]
"37
[; ;MCAL_Layer/ADC/hal_adc.c: 37:     {
{
"38
[; ;MCAL_Layer/ADC/hal_adc.c: 38:         (ADCON0bits.ADON=0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"39
[; ;MCAL_Layer/ADC/hal_adc.c: 39:         ADCON2bits.ADCS=adc_obj->conv_clk;
[e = . . _ADCON2bits 0 0 -> . *U _adc_obj 0 `uc ]
"40
[; ;MCAL_Layer/ADC/hal_adc.c: 40:         ADCON2bits.ACQT=adc_obj->acqui_time;
[e = . . _ADCON2bits 0 1 -> . *U _adc_obj 1 `uc ]
"41
[; ;MCAL_Layer/ADC/hal_adc.c: 41:         ADCON0bits.CHS=adc_obj->chnl;
[e = . . _ADCON0bits 1 2 -> . *U _adc_obj 2 `uc ]
"42
[; ;MCAL_Layer/ADC/hal_adc.c: 42:         configure_adc_channel_port(adc_obj->chnl);
[e ( _configure_adc_channel_port (1 . *U _adc_obj 2 ]
"63
[; ;MCAL_Layer/ADC/hal_adc.c: 63:         configure_adc_volatage_ref(adc_obj);
[e ( _configure_adc_volatage_ref (1 _adc_obj ]
"64
[; ;MCAL_Layer/ADC/hal_adc.c: 64:         configure_adc_result_format(adc_obj);
[e ( _configure_adc_result_format (1 _adc_obj ]
"66
[; ;MCAL_Layer/ADC/hal_adc.c: 66:         (ADCON0bits.ADON=1);
[e = . . _ADCON0bits 1 0 -> -> 1 `i `uc ]
"68
[; ;MCAL_Layer/ADC/hal_adc.c: 68:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"69
[; ;MCAL_Layer/ADC/hal_adc.c: 69:     }
}
[e :U 277 ]
"72
[; ;MCAL_Layer/ADC/hal_adc.c: 72:     return ret;
[e ) _ret ]
[e $UE 275  ]
"73
[; ;MCAL_Layer/ADC/hal_adc.c: 73: }
[e :UE 275 ]
}
"81
[; ;MCAL_Layer/ADC/hal_adc.c: 81: Std_RetrunType ADC_DeInit(const adc_t *adc_obj){
[v _ADC_DeInit `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_DeInit ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"82
[; ;MCAL_Layer/ADC/hal_adc.c: 82:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"83
[; ;MCAL_Layer/ADC/hal_adc.c: 83:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 279  ]
"84
[; ;MCAL_Layer/ADC/hal_adc.c: 84:     {
{
"85
[; ;MCAL_Layer/ADC/hal_adc.c: 85:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"86
[; ;MCAL_Layer/ADC/hal_adc.c: 86:     }
}
[e $U 280  ]
"87
[; ;MCAL_Layer/ADC/hal_adc.c: 87:     else
[e :U 279 ]
"88
[; ;MCAL_Layer/ADC/hal_adc.c: 88:     {
{
"90
[; ;MCAL_Layer/ADC/hal_adc.c: 90:         (ADCON0bits.ADON=0);
[e = . . _ADCON0bits 1 0 -> -> 0 `i `uc ]
"95
[; ;MCAL_Layer/ADC/hal_adc.c: 95:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"96
[; ;MCAL_Layer/ADC/hal_adc.c: 96:     }
}
[e :U 280 ]
"99
[; ;MCAL_Layer/ADC/hal_adc.c: 99:     return ret;
[e ) _ret ]
[e $UE 278  ]
"100
[; ;MCAL_Layer/ADC/hal_adc.c: 100: }
[e :UE 278 ]
}
"108
[; ;MCAL_Layer/ADC/hal_adc.c: 108: Std_RetrunType ADC_start_conversion(const adc_t *adc_obj){
[v _ADC_start_conversion `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _ADC_start_conversion ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"109
[; ;MCAL_Layer/ADC/hal_adc.c: 109:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"110
[; ;MCAL_Layer/ADC/hal_adc.c: 110:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 282  ]
"111
[; ;MCAL_Layer/ADC/hal_adc.c: 111:     {
{
"112
[; ;MCAL_Layer/ADC/hal_adc.c: 112:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"113
[; ;MCAL_Layer/ADC/hal_adc.c: 113:     }
}
[e $U 283  ]
"114
[; ;MCAL_Layer/ADC/hal_adc.c: 114:     else
[e :U 282 ]
"115
[; ;MCAL_Layer/ADC/hal_adc.c: 115:     {
{
"116
[; ;MCAL_Layer/ADC/hal_adc.c: 116:         (ADCON0bits.GODONE=1);
[e = . . _ADCON0bits 7 1 -> -> 1 `i `uc ]
"118
[; ;MCAL_Layer/ADC/hal_adc.c: 118:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"119
[; ;MCAL_Layer/ADC/hal_adc.c: 119:     }
}
[e :U 283 ]
"122
[; ;MCAL_Layer/ADC/hal_adc.c: 122:     return ret;
[e ) _ret ]
[e $UE 281  ]
"123
[; ;MCAL_Layer/ADC/hal_adc.c: 123: }
[e :UE 281 ]
}
"132
[; ;MCAL_Layer/ADC/hal_adc.c: 132: Std_RetrunType ADC_is_conversion_done(const adc_t *adc_obj,uint8 *adc_conv_status){
[v _ADC_is_conversion_done `(uc ~T0 @X0 1 ef2`*CS274`*uc ]
{
[e :U _ADC_is_conversion_done ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[v _adc_conv_status `*uc ~T0 @X0 1 r2 ]
[f ]
"133
[; ;MCAL_Layer/ADC/hal_adc.c: 133:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"134
[; ;MCAL_Layer/ADC/hal_adc.c: 134:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 285  ]
"135
[; ;MCAL_Layer/ADC/hal_adc.c: 135:     {
{
"136
[; ;MCAL_Layer/ADC/hal_adc.c: 136:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"137
[; ;MCAL_Layer/ADC/hal_adc.c: 137:     }
}
[e $U 286  ]
"138
[; ;MCAL_Layer/ADC/hal_adc.c: 138:     else
[e :U 285 ]
"139
[; ;MCAL_Layer/ADC/hal_adc.c: 139:     {
{
"141
[; ;MCAL_Layer/ADC/hal_adc.c: 141:        *adc_conv_status= (uint8)(!(ADCON0bits.GODONE));
[e = *U _adc_conv_status -> -> ! != -> . . _ADCON0bits 7 1 `i -> 0 `i `i `uc ]
"142
[; ;MCAL_Layer/ADC/hal_adc.c: 142:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"143
[; ;MCAL_Layer/ADC/hal_adc.c: 143:     }
}
[e :U 286 ]
"146
[; ;MCAL_Layer/ADC/hal_adc.c: 146:     return ret;
[e ) _ret ]
[e $UE 284  ]
"147
[; ;MCAL_Layer/ADC/hal_adc.c: 147: }
[e :UE 284 ]
}
"156
[; ;MCAL_Layer/ADC/hal_adc.c: 156: Std_RetrunType ADC_select_channel(const adc_t *adc_obj,adc_channel_t chanel){
[v _ADC_select_channel `(uc ~T0 @X0 1 ef2`*CS274`E3045 ]
{
[e :U _ADC_select_channel ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[v _chanel `E3045 ~T0 @X0 1 r2 ]
[f ]
"157
[; ;MCAL_Layer/ADC/hal_adc.c: 157:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"158
[; ;MCAL_Layer/ADC/hal_adc.c: 158:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 288  ]
"159
[; ;MCAL_Layer/ADC/hal_adc.c: 159:     {
{
"160
[; ;MCAL_Layer/ADC/hal_adc.c: 160:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"161
[; ;MCAL_Layer/ADC/hal_adc.c: 161:     }
}
[e $U 289  ]
"162
[; ;MCAL_Layer/ADC/hal_adc.c: 162:     else
[e :U 288 ]
"163
[; ;MCAL_Layer/ADC/hal_adc.c: 163:     {
{
"165
[; ;MCAL_Layer/ADC/hal_adc.c: 165:         ADCON0bits.CHS=chanel;
[e = . . _ADCON0bits 1 2 -> _chanel `uc ]
"166
[; ;MCAL_Layer/ADC/hal_adc.c: 166:         configure_adc_channel_port(chanel);
[e ( _configure_adc_channel_port (1 _chanel ]
"168
[; ;MCAL_Layer/ADC/hal_adc.c: 168:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"169
[; ;MCAL_Layer/ADC/hal_adc.c: 169:     }
}
[e :U 289 ]
"172
[; ;MCAL_Layer/ADC/hal_adc.c: 172:     return ret;
[e ) _ret ]
[e $UE 287  ]
"173
[; ;MCAL_Layer/ADC/hal_adc.c: 173: }
[e :UE 287 ]
}
"182
[; ;MCAL_Layer/ADC/hal_adc.c: 182: Std_RetrunType ADC_get_conversion_result(const adc_t *adc_obj,uint16 *adc_result){
[v _ADC_get_conversion_result `(uc ~T0 @X0 1 ef2`*CS274`*us ]
{
[e :U _ADC_get_conversion_result ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[v _adc_result `*us ~T0 @X0 1 r2 ]
[f ]
"183
[; ;MCAL_Layer/ADC/hal_adc.c: 183:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"184
[; ;MCAL_Layer/ADC/hal_adc.c: 184:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 291  ]
"185
[; ;MCAL_Layer/ADC/hal_adc.c: 185:     {
{
"186
[; ;MCAL_Layer/ADC/hal_adc.c: 186:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"187
[; ;MCAL_Layer/ADC/hal_adc.c: 187:     }
}
[e $U 292  ]
"188
[; ;MCAL_Layer/ADC/hal_adc.c: 188:     else
[e :U 291 ]
"189
[; ;MCAL_Layer/ADC/hal_adc.c: 189:     {
{
"190
[; ;MCAL_Layer/ADC/hal_adc.c: 190:         if(adc_obj->result_format == 0U)
[e $ ! == -> . *U _adc_obj 3 `ui -> 0 `ui 293  ]
"191
[; ;MCAL_Layer/ADC/hal_adc.c: 191:         {
{
"192
[; ;MCAL_Layer/ADC/hal_adc.c: 192:             *adc_result=(uint16)(ADRESH+((ADRESL>>6)<<8));
[e = *U _adc_result -> + -> _ADRESH `i << >> -> _ADRESL `i -> 6 `i -> 8 `i `us ]
"194
[; ;MCAL_Layer/ADC/hal_adc.c: 194:         }
}
[e $U 294  ]
"195
[; ;MCAL_Layer/ADC/hal_adc.c: 195:         else if(adc_obj->result_format == 1U)
[e :U 293 ]
[e $ ! == -> . *U _adc_obj 3 `ui -> 1 `ui 295  ]
"196
[; ;MCAL_Layer/ADC/hal_adc.c: 196:         {
{
"197
[; ;MCAL_Layer/ADC/hal_adc.c: 197:             *adc_result=(uint16)((ADRESH<<8)+ADRESL);
[e = *U _adc_result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"198
[; ;MCAL_Layer/ADC/hal_adc.c: 198:         }
}
[e $U 296  ]
"199
[; ;MCAL_Layer/ADC/hal_adc.c: 199:         else
[e :U 295 ]
"200
[; ;MCAL_Layer/ADC/hal_adc.c: 200:         {
{
"201
[; ;MCAL_Layer/ADC/hal_adc.c: 201:             *adc_result=(uint16)((ADRESH<<8)+ADRESL);
[e = *U _adc_result -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `us ]
"202
[; ;MCAL_Layer/ADC/hal_adc.c: 202:         }
}
[e :U 296 ]
[e :U 294 ]
"204
[; ;MCAL_Layer/ADC/hal_adc.c: 204:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"205
[; ;MCAL_Layer/ADC/hal_adc.c: 205:     }
}
[e :U 292 ]
"208
[; ;MCAL_Layer/ADC/hal_adc.c: 208:     return ret;
[e ) _ret ]
[e $UE 290  ]
"209
[; ;MCAL_Layer/ADC/hal_adc.c: 209: }
[e :UE 290 ]
}
"219
[; ;MCAL_Layer/ADC/hal_adc.c: 219: Std_RetrunType ADC_get_conversion_result_blocking(const adc_t *adc_obj,adc_channel_t chanel,uint16 *adc_result){
[v _ADC_get_conversion_result_blocking `(uc ~T0 @X0 1 ef3`*CS274`E3045`*us ]
{
[e :U _ADC_get_conversion_result_blocking ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[v _chanel `E3045 ~T0 @X0 1 r2 ]
[v _adc_result `*us ~T0 @X0 1 r3 ]
[f ]
"220
[; ;MCAL_Layer/ADC/hal_adc.c: 220:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"221
[; ;MCAL_Layer/ADC/hal_adc.c: 221:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 298  ]
"222
[; ;MCAL_Layer/ADC/hal_adc.c: 222:     {
{
"223
[; ;MCAL_Layer/ADC/hal_adc.c: 223:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"224
[; ;MCAL_Layer/ADC/hal_adc.c: 224:     }
}
[e $U 299  ]
"225
[; ;MCAL_Layer/ADC/hal_adc.c: 225:     else
[e :U 298 ]
"226
[; ;MCAL_Layer/ADC/hal_adc.c: 226:     {
{
"227
[; ;MCAL_Layer/ADC/hal_adc.c: 227:         ret= ADC_select_channel(adc_obj,chanel);
[e = _ret ( _ADC_select_channel (2 , _adc_obj _chanel ]
"228
[; ;MCAL_Layer/ADC/hal_adc.c: 228:         ret&=ADC_start_conversion(adc_obj);
[e =& _ret -> ( _ADC_start_conversion (1 _adc_obj `uc ]
"229
[; ;MCAL_Layer/ADC/hal_adc.c: 229:         while(ADCON0bits.GODONE != 0);
[e $U 300  ]
[e :U 301 ]
[e :U 300 ]
[e $ != -> . . _ADCON0bits 7 1 `i -> 0 `i 301  ]
[e :U 302 ]
"230
[; ;MCAL_Layer/ADC/hal_adc.c: 230:         ret&=ADC_get_conversion_result(adc_obj,adc_result);
[e =& _ret -> ( _ADC_get_conversion_result (2 , _adc_obj _adc_result `uc ]
"232
[; ;MCAL_Layer/ADC/hal_adc.c: 232:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"233
[; ;MCAL_Layer/ADC/hal_adc.c: 233:     }
}
[e :U 299 ]
"236
[; ;MCAL_Layer/ADC/hal_adc.c: 236:     return ret;
[e ) _ret ]
[e $UE 297  ]
"237
[; ;MCAL_Layer/ADC/hal_adc.c: 237: }
[e :UE 297 ]
}
"246
[; ;MCAL_Layer/ADC/hal_adc.c: 246: Std_RetrunType ADC_get_conversion_result_interrupt(const adc_t *adc_obj,adc_channel_t chanel){
[v _ADC_get_conversion_result_interrupt `(uc ~T0 @X0 1 ef2`*CS274`E3045 ]
{
[e :U _ADC_get_conversion_result_interrupt ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[v _chanel `E3045 ~T0 @X0 1 r2 ]
[f ]
"247
[; ;MCAL_Layer/ADC/hal_adc.c: 247:     Std_RetrunType ret = ((Std_RetrunType) 0x00);
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"248
[; ;MCAL_Layer/ADC/hal_adc.c: 248:     if(adc_obj == ((void*)0) )
[e $ ! == _adc_obj -> -> -> 0 `i `*v `*CS274 304  ]
"249
[; ;MCAL_Layer/ADC/hal_adc.c: 249:     {
{
"250
[; ;MCAL_Layer/ADC/hal_adc.c: 250:         ret=((Std_RetrunType) 0x00);
[e = _ret -> -> 0 `i `uc ]
"251
[; ;MCAL_Layer/ADC/hal_adc.c: 251:     }
}
[e $U 305  ]
"252
[; ;MCAL_Layer/ADC/hal_adc.c: 252:     else
[e :U 304 ]
"253
[; ;MCAL_Layer/ADC/hal_adc.c: 253:     {
{
"257
[; ;MCAL_Layer/ADC/hal_adc.c: 257:         ret= ADC_select_channel(adc_obj,chanel);
[e = _ret ( _ADC_select_channel (2 , _adc_obj _chanel ]
"258
[; ;MCAL_Layer/ADC/hal_adc.c: 258:         ret&=ADC_start_conversion(adc_obj);
[e =& _ret -> ( _ADC_start_conversion (1 _adc_obj `uc ]
"260
[; ;MCAL_Layer/ADC/hal_adc.c: 260:         ret=((Std_RetrunType) 0x01);
[e = _ret -> -> 1 `i `uc ]
"261
[; ;MCAL_Layer/ADC/hal_adc.c: 261:     }
}
[e :U 305 ]
"264
[; ;MCAL_Layer/ADC/hal_adc.c: 264:     return ret;
[e ) _ret ]
[e $UE 303  ]
"265
[; ;MCAL_Layer/ADC/hal_adc.c: 265: }
[e :UE 303 ]
}
[v F3149 `(v ~T0 @X0 1 tf1`*CS274 ]
"268
[; ;MCAL_Layer/ADC/hal_adc.c: 268: static __attribute__((inline)) void configure_adc_volatage_ref(const adc_t *adc_obj){
[v _configure_adc_volatage_ref `TF3149 ~T0 @X0 1 s ]
{
[e :U _configure_adc_volatage_ref ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"269
[; ;MCAL_Layer/ADC/hal_adc.c: 269:     if(adc_obj->voltage_cfg == 1U){
[e $ ! == -> . *U _adc_obj 4 `ui -> 1 `ui 307  ]
{
"271
[; ;MCAL_Layer/ADC/hal_adc.c: 271:         do{ADCON1bits.VCFG1=1; ADCON1bits.VCFG0=1; }while(0);;
[e :U 310 ]
{
[e = . . _ADCON1bits 1 5 -> -> 1 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 1 `i `uc ]
}
[e :U 309 ]
"272
[; ;MCAL_Layer/ADC/hal_adc.c: 272:     }
}
[e $U 311  ]
"273
[; ;MCAL_Layer/ADC/hal_adc.c: 273:     else if(adc_obj->voltage_cfg == 0U){
[e :U 307 ]
[e $ ! == -> . *U _adc_obj 4 `ui -> 0 `ui 312  ]
{
"275
[; ;MCAL_Layer/ADC/hal_adc.c: 275:         do{ADCON1bits.VCFG1=0; ADCON1bits.VCFG0=0; }while(0);;
[e :U 315 ]
{
[e = . . _ADCON1bits 1 5 -> -> 0 `i `uc ]
[e = . . _ADCON1bits 1 4 -> -> 0 `i `uc ]
}
[e :U 314 ]
"276
[; ;MCAL_Layer/ADC/hal_adc.c: 276:     }
}
[e $U 316  ]
"277
[; ;MCAL_Layer/ADC/hal_adc.c: 277:     else{ }
[e :U 312 ]
{
}
[e :U 316 ]
[e :U 311 ]
"278
[; ;MCAL_Layer/ADC/hal_adc.c: 278: }
[e :UE 306 ]
}
[v F3152 `(v ~T0 @X0 1 tf1`*CS274 ]
"282
[; ;MCAL_Layer/ADC/hal_adc.c: 282: static __attribute__((inline)) void configure_adc_result_format(const adc_t *adc_obj){
[v _configure_adc_result_format `TF3152 ~T0 @X0 1 s ]
{
[e :U _configure_adc_result_format ]
[v _adc_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"283
[; ;MCAL_Layer/ADC/hal_adc.c: 283:     if(adc_obj->result_format == 0U){
[e $ ! == -> . *U _adc_obj 3 `ui -> 0 `ui 318  ]
{
"284
[; ;MCAL_Layer/ADC/hal_adc.c: 284:         (ADCON2bits.ADFM=0);
[e = . . _ADCON2bits 0 3 -> -> 0 `i `uc ]
"285
[; ;MCAL_Layer/ADC/hal_adc.c: 285:     }
}
[e $U 319  ]
"286
[; ;MCAL_Layer/ADC/hal_adc.c: 286:     else if(adc_obj->result_format == 1U){
[e :U 318 ]
[e $ ! == -> . *U _adc_obj 3 `ui -> 1 `ui 320  ]
{
"287
[; ;MCAL_Layer/ADC/hal_adc.c: 287:          (ADCON2bits.ADFM=1);
[e = . . _ADCON2bits 0 3 -> -> 1 `i `uc ]
"288
[; ;MCAL_Layer/ADC/hal_adc.c: 288:     }
}
[e $U 321  ]
"289
[; ;MCAL_Layer/ADC/hal_adc.c: 289:     else{ }
[e :U 320 ]
{
}
[e :U 321 ]
[e :U 319 ]
"290
[; ;MCAL_Layer/ADC/hal_adc.c: 290: }
[e :UE 317 ]
}
[v F3155 `(v ~T0 @X0 1 tf1`E3045 ]
"294
[; ;MCAL_Layer/ADC/hal_adc.c: 294: static __attribute__((inline)) void configure_adc_channel_port(adc_channel_t adc_ch){
[v _configure_adc_channel_port `TF3155 ~T0 @X0 1 s ]
{
[e :U _configure_adc_channel_port ]
[v _adc_ch `E3045 ~T0 @X0 1 r1 ]
[f ]
"295
[; ;MCAL_Layer/ADC/hal_adc.c: 295:     switch(adc_ch){
[e $U 324  ]
{
"296
[; ;MCAL_Layer/ADC/hal_adc.c: 296:         case ADC_CHANNEL_AN0:(TRISA |= ((uint8) 1<<0x0));break;
[e :U 325 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 323  ]
"297
[; ;MCAL_Layer/ADC/hal_adc.c: 297:         case ADC_CHANNEL_AN1:(TRISA |= ((uint8) 1<<0x1));break;
[e :U 326 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 323  ]
"298
[; ;MCAL_Layer/ADC/hal_adc.c: 298:         case ADC_CHANNEL_AN2:(TRISA |= ((uint8) 1<<0x2));break;
[e :U 327 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 323  ]
"299
[; ;MCAL_Layer/ADC/hal_adc.c: 299:         case ADC_CHANNEL_AN3:(TRISA |= ((uint8) 1<<0x3));break;
[e :U 328 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 323  ]
"300
[; ;MCAL_Layer/ADC/hal_adc.c: 300:         case ADC_CHANNEL_AN4:(TRISA |= ((uint8) 1<<0x5));break;
[e :U 329 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 5 `i `Vuc ]
[e $U 323  ]
"301
[; ;MCAL_Layer/ADC/hal_adc.c: 301:         case ADC_CHANNEL_AN5:(TRISE |= ((uint8) 1<<0x0));break;
[e :U 330 ]
[e =| _TRISE -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 323  ]
"302
[; ;MCAL_Layer/ADC/hal_adc.c: 302:         case ADC_CHANNEL_AN6:(TRISA |= ((uint8) 1<<0x1));break;
[e :U 331 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 323  ]
"303
[; ;MCAL_Layer/ADC/hal_adc.c: 303:         case ADC_CHANNEL_AN7:(TRISA |= ((uint8) 1<<0x2));break;
[e :U 332 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 323  ]
"304
[; ;MCAL_Layer/ADC/hal_adc.c: 304:         case ADC_CHANNEL_AN8:(TRISB |= ((uint8) 1<<0x2));break;
[e :U 333 ]
[e =| _TRISB -> << -> -> -> 1 `i `uc `i -> 2 `i `Vuc ]
[e $U 323  ]
"305
[; ;MCAL_Layer/ADC/hal_adc.c: 305:         case ADC_CHANNEL_AN9:(TRISA |= ((uint8) 1<<0x3));break;
[e :U 334 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 3 `i `Vuc ]
[e $U 323  ]
"306
[; ;MCAL_Layer/ADC/hal_adc.c: 306:         case ADC_CHANNEL_AN10:(TRISA |= ((uint8) 1<<0x1));break;
[e :U 335 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 1 `i `Vuc ]
[e $U 323  ]
"307
[; ;MCAL_Layer/ADC/hal_adc.c: 307:         case ADC_CHANNEL_AN11:(TRISA |= ((uint8) 1<<0x4));break;
[e :U 336 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 4 `i `Vuc ]
[e $U 323  ]
"308
[; ;MCAL_Layer/ADC/hal_adc.c: 308:         case ADC_CHANNEL_AN12:(TRISA |= ((uint8) 1<<0x0));break;
[e :U 337 ]
[e =| _TRISA -> << -> -> -> 1 `i `uc `i -> 0 `i `Vuc ]
[e $U 323  ]
"309
[; ;MCAL_Layer/ADC/hal_adc.c: 309:     }
}
[e $U 323  ]
[e :U 324 ]
[e [\ -> _adc_ch `ui , $ -> . `E3045 0 `ui 325
 , $ -> . `E3045 1 `ui 326
 , $ -> . `E3045 2 `ui 327
 , $ -> . `E3045 3 `ui 328
 , $ -> . `E3045 4 `ui 329
 , $ -> . `E3045 5 `ui 330
 , $ -> . `E3045 6 `ui 331
 , $ -> . `E3045 7 `ui 332
 , $ -> . `E3045 8 `ui 333
 , $ -> . `E3045 9 `ui 334
 , $ -> . `E3045 10 `ui 335
 , $ -> . `E3045 11 `ui 336
 , $ -> . `E3045 12 `ui 337
 323 ]
[e :U 323 ]
"310
[; ;MCAL_Layer/ADC/hal_adc.c: 310: }
[e :UE 322 ]
}
